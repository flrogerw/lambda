{
  "name": "dynamodb-marshaler",
  "version": "1.2.2",
  "description": "Translates sane javascript objects (and JSON) into DynamoDb format and vice versa.",
  "main": "dynamodb-marshaler.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/CascadeEnergy/dynamoDb-marshaler.git"
  },
  "scripts": {
    "test": "./node_modules/.bin/gulp test",
    "browser-build": "browserify src/dynamodb-marshaler.js --standalone dynamodb-marshaler -t babelify --outfile dist/dynamodb-marshaler.js"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "babel": "^5.8.29",
    "babelify": "^6.4.0",
    "browserify": "^9.0.8",
    "gulp": "^3.8.11",
    "gulp-babel": "^5.1.0",
    "gulp-file": "^0.2.0",
    "gulp-istanbul": "^0.8.1",
    "gulp-jshint": "^1.10.0",
    "gulp-load-plugins": "^0.10.0",
    "gulp-mocha": "^2.0.1",
    "gulp-plumber": "^1.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-streamify": "0.0.5",
    "gulp-uglify": "^1.2.0",
    "isparta": "^3.0.3",
    "jshint-stylish": "^1.0.1",
    "leche": "^2.1.1",
    "mocha": "^2.2.4",
    "sinon": "^1.14.1",
    "vinyl-source-stream": "^1.1.0"
  },
  "dependencies": {
    "babel-runtime": "^5.8.29",
    "dispatch-recursive": "^1.0.2",
    "lodash": "^3.10.1"
  },
  "engines": {
    "node": ">=0.10.33"
  },
  "readme": "# dynamoDb-marshaler [![Build Status](https://travis-ci.org/CascadeEnergy/dynamoDb-marshaler.svg?branch=master)](https://travis-ci.org/CascadeEnergy/dynamoDb-marshaler)\n\n[![NPM](https://nodei.co/npm/dynamodb-marshaler.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/dynamodb-marshaler/)\n\nTranslates sane javascript objects (and JSON) into DynamoDb format and vice versa.\n\n**Caveat** Does not yet work with Binary types (B and BS). I have personally never come across\na case where I'm using binary types in json. If you need binary support, please let me know how it might be done, or contribute.\n\n## Why?\nTranslation of DynamoDb `AttributeValue` objects is cumbersome and makes working with the [aws-sdk-js](https://github.com/aws/aws-sdk-js)\nmore difficult than it needs to be. This library abstracts away the verbose tiresome mappings and lets you work with standard javascript (JSON) data like\nyou're used to.\n\n## Install\n```\nnpm install dynamodb-marshaler\n```\n\n## Basic Marshaling of Objects\n```javascript\nvar AWS = require('aws-sdk');\nvar marshalItem = require('dynamodb-marshaler').marshalItem;\n    \nAWS.config.region = 'us-west-2';\nvar dynamoDb = new AWS.DynamoDB();\n\ndynamoDb.putItem({\n  TableName: 'users',\n  Item: marshalItem({username: 'nackjicholson'})  // {username: {S: 'nackjicholson'}}\n});\n```\n\n## Basic Unmarshaling of Objects\n```javascript\nvar AWS = require('aws-sdk');\nvar unmarshalItem = require('dynamodb-marshaler').unmarshalItem;\n    \nAWS.config.region = 'us-west-2';\nvar dynamoDb = new AWS.DynamoDB();\n\nvar data = dynamoDb.scan({\n  TableName: 'users'\n}, function(err, data) {\n  // data.Items = [{username: {S: 'nackjicholson'}]\n  var items = data.Items.map(unmarshalItem);\n  console.log(items); // [{username: 'nackjicholson'}]\n});\n```\n\n## Single Value Marshaling\n\n```javascript\nvar marshal = require('dynamodb-marshaler/marshal');\nconsole.log(marshal('nackjicholson')); // {S: 'nackjicholson'}\nconsole.log(marshal(true)); // {BOOL: true}\nconsole.log(marshal([1, 2, 3])); // {NS: ['1', '2', '3']}\n```\n\n## Methods\n**.marshal**  \n**.unmarshal**  \n**.marshalItem** (alias `.toDDB`)  \n**.unmarshalItem** (alias `.toJS`)  \n**.marshalJson**  \n**.unmarshalJson**  \n\n## Browser\nIn the `./dist` directory of this repo there is a browser compatible version of this library which can be used as a\nbrowser global, AMD, or CommonJS/Node module. Check the `examples/example.html` file for basic usage.\n\n## JSON\nYou can marshal directly from a JSON string using `marshalJson`. As well as,  unmarshal a DynamoDb api response into a\nJSON string with `unmarshalJson`.\n\n## Examples\nThe examples directory contains a couple of node scripts which use the marshaler. If you clone this repo you can run\nthem easily using these commands:\n\n`node examples/example-marshal.js`  \n`node examples/example-unmarshal.js`  \n\nThey showcase all the conversions this library can perform.\n\nThe `examples/example.html` showcases use of `dynamodb-marshaler` in the browser environment. It can be run simply by\nopening the example in a web browser. Or you can check it out at this [Plunkr](http://embed.plnkr.co/djI2cuXAqssYZoHO9s5a/preview)\n\n## Understanding the rules\n\n#### Empty strings\nDynamoDB does not allow saving of an empty string `\"\"`. The marshaler treats this as an error.\n\n#### Sets vs Lists\nJavascript has one list type -- arrays, but DynamoDB has sets and lists. How does the marshaler distinguish between the two?\n\nHere's a table:\n\n|                       | input                 | marshaled value                                    |\n| --------------------- | --------------------- | -------------------------------------------------- |\n| Strings/No duplicates | [\"foo\", \"bar\"]        | {\"SS\": [\"foo\", \"bar\"]}                             |\n| Numbers/No duplicates | [42, 43]              | {\"NS\": [\"42\", \"43\"]}                               |\n| Empty                 | []                    | {\"L\": []}                                          |\n| Mixed                 | [42, \"foo\", null]     | {\"L\": [{\"N\": \"42\"}, {\"S\": \"foo\"}, {\"NULL\": true}]} |\n| Duplicates            | [\"foo\", \"bar\", \"foo\"] | {\"L\": [{\"S\": \"foo\"}, {\"S\": \"bar\"}, {\"S\": \"foo\"}]}  |\n\n## Contributions\n\nThis module is written in ES6, and transpiled to ES5 by babel. Please contribute. But make sure test coverage is 100%\nand that the code complies with the [Cascade Energy Style Guide for NodeJs](https://github.com/CascadeEnergy/node-style-guide)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/CascadeEnergy/dynamoDb-marshaler/issues"
  },
  "_id": "dynamodb-marshaler@1.2.2",
  "dist": {
    "shasum": "9db8ad25abff13e08d4b80197fbfd44b00006f49"
  },
  "_from": "dynamodb-marshaler@",
  "_resolved": "https://registry.npmjs.org/dynamodb-marshaler/-/dynamodb-marshaler-1.2.2.tgz"
}
